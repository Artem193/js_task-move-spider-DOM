{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,OAEhC,EAAO,EAAK,qBAAqB,GACjC,EAAW,EAAK,IAAI,CAAG,QACvB,EAAU,EAAK,GAAG,CAAG,QACrB,EAAa,SAAS,iBAAiB,GAAM,eAAe,EAC5D,EAAY,SAAS,iBAAiB,GAAM,cAAc,EAC1D,EAAY,SAAS,iBAAiB,GAAM,KAAK,EACjD,EAAa,SAAS,iBAAiB,GAAM,MAAM,EACnD,EAAoB,EAAE,OAAO,CAAG,EAAW,EAC3C,EAAqB,EAAE,OAAO,CAAG,EAAW,EAAa,EACzD,EAAmB,EAAE,OAAO,CAAG,EAAU,EACzC,EAAsB,EAAE,OAAO,CAAG,EAAU,EAAY,EAO9D,IALE,CAAA,GACA,GACA,GACA,CAJF,GAUA,IAAI,EAAU,EAAE,OAAO,CAAG,EAAW,EAAa,EAAO,WAAW,CAAG,EACnE,EAAS,EAAE,OAAO,CAAG,EAAU,EAAY,EAAO,YAAY,CAAG,EAEjE,EAAU,GACZ,CAAA,EAAU,CAAA,EAGR,EAAU,EAAY,EAAO,WAAW,EAC1C,CAAA,EAAU,EAAY,EAAO,WAAW,AAAX,EAG3B,EAAS,GACX,CAAA,EAAS,CAAA,EAGP,EAAS,EAAa,EAAO,YAAY,EAC3C,CAAA,EAAS,EAAa,EAAO,YAAY,AAAZ,EAG/B,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC/B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var wall = document.querySelector(\".wall\");\n    var spider = document.querySelector(\"img\");\n    var rect = wall.getBoundingClientRect();\n    var wallLeft = rect.left + scrollX;\n    var wallTop = rect.top + scrollY;\n    var borderLeft = parseInt(getComputedStyle(wall).borderLeftWidth);\n    var borderTop = parseInt(getComputedStyle(wall).borderTopWidth);\n    var wallWidth = parseInt(getComputedStyle(wall).width);\n    var wallHeight = parseInt(getComputedStyle(wall).height);\n    var NotAvailableXLeft = e.clientX < wallLeft + borderLeft;\n    var NotAvailableXRight = e.clientX > wallLeft + borderLeft + wallWidth;\n    var NotAvailableYTop = e.clientY < wallTop + borderTop;\n    var NotAvailableYBottom = e.clientY > wallTop + borderTop + wallHeight;\n    var notAvailable = NotAvailableXLeft || NotAvailableXRight || NotAvailableYTop || NotAvailableYBottom;\n    if (notAvailable) return;\n    var newLeft = e.clientX - wallLeft - borderLeft - spider.offsetWidth / 2;\n    var newTop = e.clientY - wallTop - borderTop - spider.offsetHeight / 2;\n    if (newLeft < 0) newLeft = 0;\n    if (newLeft > wallWidth - spider.offsetWidth) newLeft = wallWidth - spider.offsetWidth;\n    if (newTop < 0) newTop = 0;\n    if (newTop > wallHeight - spider.offsetHeight) newTop = wallHeight - spider.offsetHeight;\n    spider.style.left = \"\".concat(newLeft, \"px\");\n    spider.style.top = \"\".concat(newTop, \"px\");\n});\n\n//# sourceMappingURL=index.d7e8d87c.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('img');\n\n  const rect = wall.getBoundingClientRect();\n  const wallLeft = rect.left + scrollX;\n  const wallTop = rect.top + scrollY;\n  const borderLeft = parseInt(getComputedStyle(wall).borderLeftWidth);\n  const borderTop = parseInt(getComputedStyle(wall).borderTopWidth);\n  const wallWidth = parseInt(getComputedStyle(wall).width);\n  const wallHeight = parseInt(getComputedStyle(wall).height);\n  const NotAvailableXLeft = e.clientX < wallLeft + borderLeft;\n  const NotAvailableXRight = e.clientX > wallLeft + borderLeft + wallWidth;\n  const NotAvailableYTop = e.clientY < wallTop + borderTop;\n  const NotAvailableYBottom = e.clientY > wallTop + borderTop + wallHeight;\n  const notAvailable =\n    NotAvailableXLeft ||\n    NotAvailableXRight ||\n    NotAvailableYTop ||\n    NotAvailableYBottom;\n\n  if (notAvailable) {\n    return;\n  }\n\n  let newLeft = e.clientX - wallLeft - borderLeft - spider.offsetWidth / 2;\n  let newTop = e.clientY - wallTop - borderTop - spider.offsetHeight / 2;\n\n  if (newLeft < 0) {\n    newLeft = 0;\n  }\n\n  if (newLeft > wallWidth - spider.offsetWidth) {\n    newLeft = wallWidth - spider.offsetWidth;\n  }\n\n  if (newTop < 0) {\n    newTop = 0;\n  }\n\n  if (newTop > wallHeight - spider.offsetHeight) {\n    newTop = wallHeight - spider.offsetHeight;\n  }\n\n  spider.style.left = `${newLeft}px`;\n  spider.style.top = `${newTop}px`;\n});\n"],"names":["document","addEventListener","e","wall","querySelector","spider","rect","getBoundingClientRect","wallLeft","left","scrollX","wallTop","top","scrollY","borderLeft","parseInt","getComputedStyle","borderLeftWidth","borderTop","borderTopWidth","wallWidth","width","wallHeight","height","NotAvailableXLeft","clientX","NotAvailableXRight","NotAvailableYTop","clientY","NotAvailableYBottom","newLeft","offsetWidth","newTop","offsetHeight","style","concat"],"version":3,"file":"index.d7e8d87c.js.map"}