{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,SAAS,CAAC;IAClC,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,MAAM,SAAS,SAAS,aAAa,CAAC;IAEtC,MAAM,OAAO,KAAK,qBAAqB;IACvC,MAAM,WAAW,KAAK,IAAI,GAAG;IAC7B,MAAM,UAAU,KAAK,GAAG,GAAG;IAC3B,MAAM,aAAa,SAAS,iBAAiB,MAAM,eAAe;IAClE,MAAM,YAAY,SAAS,iBAAiB,MAAM,cAAc;IAChE,MAAM,YAAY,SAAS,iBAAiB,MAAM,KAAK;IACvD,MAAM,aAAa,SAAS,iBAAiB,MAAM,MAAM;IACzD,MAAM,oBAAoB,EAAE,OAAO,GAAG,WAAW;IACjD,MAAM,qBAAqB,EAAE,OAAO,GAAG,WAAW,aAAa;IAC/D,MAAM,mBAAmB,EAAE,OAAO,GAAG,UAAU;IAC/C,MAAM,sBAAsB,EAAE,OAAO,GAAG,UAAU,YAAY;IAC9D,MAAM,eACJ,qBACA,sBACA,oBACA;IAEF,IAAI,cACF;IAGF,IAAI,UAAU,EAAE,OAAO,GAAG,WAAW,aAAa,OAAO,WAAW,GAAG;IACvE,IAAI,SAAS,EAAE,OAAO,GAAG,UAAU,YAAY,OAAO,YAAY,GAAG;IAErE,IAAI,UAAU,GACZ,UAAU;IAGZ,IAAI,UAAU,YAAY,OAAO,WAAW,EAC1C,UAAU,YAAY,OAAO,WAAW;IAG1C,IAAI,SAAS,GACX,SAAS;IAGX,IAAI,SAAS,aAAa,OAAO,YAAY,EAC3C,SAAS,aAAa,OAAO,YAAY;IAG3C,OAAO,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;IAClC,OAAO,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC;AAClC","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('img');\n\n  const rect = wall.getBoundingClientRect();\n  const wallLeft = rect.left + scrollX;\n  const wallTop = rect.top + scrollY;\n  const borderLeft = parseInt(getComputedStyle(wall).borderLeftWidth);\n  const borderTop = parseInt(getComputedStyle(wall).borderTopWidth);\n  const wallWidth = parseInt(getComputedStyle(wall).width);\n  const wallHeight = parseInt(getComputedStyle(wall).height);\n  const NotAvailableXLeft = e.clientX < wallLeft + borderLeft;\n  const NotAvailableXRight = e.clientX > wallLeft + borderLeft + wallWidth;\n  const NotAvailableYTop = e.clientY < wallTop + borderTop;\n  const NotAvailableYBottom = e.clientY > wallTop + borderTop + wallHeight;\n  const notAvailable =\n    NotAvailableXLeft ||\n    NotAvailableXRight ||\n    NotAvailableYTop ||\n    NotAvailableYBottom;\n\n  if (notAvailable) {\n    return;\n  }\n\n  let newLeft = e.clientX - wallLeft - borderLeft - spider.offsetWidth / 2;\n  let newTop = e.clientY - wallTop - borderTop - spider.offsetHeight / 2;\n\n  if (newLeft < 0) {\n    newLeft = 0;\n  }\n\n  if (newLeft > wallWidth - spider.offsetWidth) {\n    newLeft = wallWidth - spider.offsetWidth;\n  }\n\n  if (newTop < 0) {\n    newTop = 0;\n  }\n\n  if (newTop > wallHeight - spider.offsetHeight) {\n    newTop = wallHeight - spider.offsetHeight;\n  }\n\n  spider.style.left = `${newLeft}px`;\n  spider.style.top = `${newTop}px`;\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}